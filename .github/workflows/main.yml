on:
  push:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-latest', 'ubuntu-latest', 'macos-latest']

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - run: pip install jinja2-cli pyinstaller
    - run: pyinstaller --onefile jinja2cli/cli.py
    # Optionally verify that it works (provided that it does not need user interaction)
    - run: mv ./dist/cli ./dist/jinja2-cli-linux
      if: matrix.os == 'ubuntu-latest'
    - run: mv ./dist/cli ./dist/jinja2-cli-macos
      if: matrix.os == 'macos-latest'
    - run: mv ./dist/cli.exe ./dist/jinja2-cli-windows.exe
      if: matrix.os == 'windows-latest'
    - run: ./dist/jinja2-cli* --version
    - uses: actions/upload-artifact@v2
      with:
        path: dist/*
